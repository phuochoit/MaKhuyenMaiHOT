<?php
define('CONTENT_TYPE', 'application/json'); // current CONTENT_TYPE
define('AUTHORIZATION', 'Token iDKOG4khkBOkyMHYS7Y3jFS09Yy4WYX5'); // current CONTENT_TYPE


function cron_mkmh_cron() {
    
    if(isset($_GET['cron_key']) && !empty($_GET['cron_key'])){
        $data_km =  _cron_mkmh_get_offers_informations();
        $data_coupon = _cron_mkmh_get_coupon();
        $data_product =  _cron_mkmh_get_products();
        $data_topproduct = _cron_mkmh_get_topproducts();
        if(!empty($data_topproduct)){
            _cron_mkmh_topsp_save_node($data_topproduct->data,1);
            watchdog('my_debug', '<pre>' . var_export($data_topproduct) . '</pre>');
        }
        if(!empty($data_product)){
            _cron_mkmh_topsp_save_node($data_product->data,0);
        }
        if(!empty($data_coupon)){
            _cron_mkmh_save_coupon($data_coupon);
        }
        if(!empty($data_km)){
            _cron_mkmh_km_save_node($data_km->data);
        }
        _cron_mkmh_remove_node();
        
    }

}
// save san pham
function _cron_mkmh_topsp_save_node($data, $top){
    if(empty($data)) return;
    $vidCategory = _get_vid_by_name('categories_khuyen_mai');
    if($top == 1){
        
        for ($i=0; $i < count($data) ; $i++) { 
           $val = $data[$i];
           $host = _parse_url($val->link);
           watchdog('my_debug', '<pre>' . var_export($host) . '</pre>');
        }
    }else{
        for ($i=0; $i < count($data); $i++) {
            $val = $data[$i];
            $title = $val->name;
            $query = db_query("SELECT node.nid FROM {node} AS node WHERE node.type = :type AND node.status = 1 AND node.title = :title", array(':title' => $title, ':type' => 'san_pham'))->rowCount();
            if(!$query){
                $merchant = _get_merchant_name($val->merchant);
                $query_merchant = db_query("SELECT n.nid FROM {node} AS n INNER JOIN {field_data_field_merchant} AS fm ON fm.entity_id = n.nid WHERE n.type = :type AND fm.field_merchant_value = :merchant", array(":type" => 'thuong_hieu', ':merchant' => $merchant) )->fetchObject();
                
                if(!empty($query_merchant)){
                    // get tid
                    $query_tid = db_query("SELECT td.tid FROM {taxonomy_term_data} AS td LEFT JOIN  {field_data_field_slug} AS sl ON sl.entity_id = td.tid WHERE td.vid = :vid AND sl.field_slug_value = :slug", array(':vid' => 2, ':slug' => $val->cate))->fetchObject();
                    $node = new stdClass();
                    $node->type = 'san_pham';
                    $node->uid = 1;
                    $node->title = $title;
                    $node->created = time();
                    $node->changed = $node->created;
                    $node->promote = $node->created;
                    $node->sticky  = 0;
                    $node->language = LANGUAGE_NONE;
                    $node->comment = 0;
                    $node->field_aff_link['und'][0]['url'] = $val->aff_link;
                    $node->field_domain_san_pham['und'][0]['value'] = $val->domain;
                    $node->field_url_khuyen_mai['und'][0]['url'] = $val->url;

                    // seo
                    $node->yoast_seo['und']['focus_keyword'] = $title;
                    $node->yoast_seo['und']['seo_status'] = '5';

                    $node->field_merchant['und'][0]['value'] = $val->merchant;
                    $node->field_id_khuyen_mai['und'][0]['value'] = $val->product_id;
                    $node->field_price['und'][0]['value'] = $val->price;
                    $node->field_discount['und'][0]['value'] = $val->discount;
                    $node->field_status_discount['und'][0]['value'] = $val->status_discount;
                    $node->field_discount_amount['und'][0]['value'] = $val->discount_amount;
                    $node->field_discount_rate['und'][0]['value'] = $val->discount_rate;
                    $node->field_update_time['und'][0]['value'] = date('Y-m-d', strtotime($val->update_time));
                    $node->field_hot['und'][0]['value'] = $top;
                    $node->field_thuong_hieu['und'][0]['nid'] = $query_merchant->nid;
                    // tag
                    $tags = _save_tag_by_title($title);
                    if(!empty($tags)){
                        for ($i=0; $i < count($tags); $i++) { 
                            $node->field_tags['und'][$i]['tid'] = $tags[$i];
                        }    
                    }
                    // save tid
                    if(!empty($query_tid)){
                        $node->field_category['und'][0]['tid'] = $query_tid->tid;
                    }

                    //save image
                    $fid = _save_image_form_url($val->image);
                    if(!empty($fid)){
                        $node->field_image['und'][0]['fid'] = $fid->fid;
                    }

                    // custom teaser
                    $teaser = 'Sản Phẩm '.$title.' giá rẻ nhất '.$val->discount.'đ . Mua hàng tiết kiệm tại Mã Khuyến Mãi HOT.';
                    $node->field_teaser['und'][0]['value'] = $teaser;
                    // save node
                    node_save($node);
                }
            }
        }    
    }
}
// save node khuyen mai
function _cron_mkmh_km_save_node($data){
    if(empty($data))
        return;

    // get vid
    $vidCategory = _get_vid_by_name('categories_khuyen_mai');
    for ($i=0; $i < count($data); $i++) { 
        $val = $data[$i];
        
        $query = db_query("SELECT node.nid FROM {node} AS node WHERE node.type = :type AND node.status = 1 AND node.title = :title", array(':title' => $val->name, ':type' => 'khuyen_mai'))->rowCount();
        if(!$query){
            
            $merchant = _get_merchant_name($val->merchant);

            $query_merchant = db_query("SELECT n.nid FROM {node} AS n INNER JOIN {field_data_field_merchant} AS fm ON fm.entity_id = n.nid WHERE n.type = :type AND fm.field_merchant_value = :merchant", array(":type" => 'thuong_hieu', ':merchant' => $merchant) )->fetchObject();
             
            if(!empty($query_merchant)){
                $title = $val->name;

                $node = new stdClass();
                $node->type = 'khuyen_mai';
                $node->uid = 1;
                $node->title = $title;
                $node->created = time();
                $node->changed = $node->created;
                $node->promote = $node->created;
                $node->sticky  = 0;
                $node->language = LANGUAGE_NONE;
                $node->comment = 0;
                // seo
                $node->yoast_seo['und']['focus_keyword'] = $title;
                $node->yoast_seo['und']['seo_status'] = '5';
                //aff_link
                $node->field_aff_link['und'][0]['url'] = $val->aff_link;
                $node->field_teaser['und'][0]['value'] = $val->content;
                $node->body[LANGUAGE_NONE][0]['value'] = $val->content;
                $node->field_id_khuyen_mai['und'][0]['value'] = $val->id;
                // merchant
                $node->field_merchant['und'][0]['value'] = $val->merchant;
                $node->field_url_khuyen_mai['und'][0]['url'] = $val->link;
                $node->field_domain_san_pham['und'][0]['value'] = $val->domain;
                $node->field_thuong_hieu['und'][0]['nid'] = $query_merchant->nid;
                $node->field_start_time['und'][0]['value'] = $val->start_time;
                $node->field_end_time['und'][0]['value'] = $val->end_time;
                
                // check category
                if(!empty($val->categories)){
                    $tidCategories = _get_tid_by_name(trim($val->categories[0]->category_name_show),'categories_khuyen_mai');
                    if(!empty($tidCategories)){
                        $node->field_category['und'][0]['tid'] = $tidCategories;
                    }
                    
                }
                
                //save image
                $fid = _save_image_form_url($val->image);
                if(!empty($fid)){
                    $node->field_image['und'][0]['fid'] = $fid->fid;
                }
                
                // check coupon
                if(!empty($val->coupons)){
                    $node->field_coupon_code['und'][0]['value'] = !empty($val->coupons[0]->coupon_code) ? $val->coupons[0]->coupon_code : null ;
                    $node->field_coupon_desc['und'][0]['value'] = !empty($val->coupons[0]->coupon_desc) ? $val->coupons[0]->coupon_desc : null ;
                    $node->field_coupon_save['und'][0]['value'] = !empty($val->coupons[0]->coupon_save) ? $val->coupons[0]->coupon_save : null ;
                }
                // field tag
                $tags = _save_tag_by_title($title);
                if(!empty($tags)){
                    
                    for ($i=0; $i < count($tags); $i++) { 
                    $node->field_tags['und'][$i]['tid'] = $tags[$i];
                    }    
                }
                    
                // save node
                node_save($node);
            }            
        }
    }
}

// get and save coupon 
function _cron_mkmh_save_coupon($data){
    if(empty($data))
        return;
    
    for ($i=0; $i < count($data); $i++) { 
        $val = $data[$i];
        $query = db_query("SELECT c.id FROM {coupon} AS c WHERE c.title = :title", array(':title' => $val->title))->rowCount();
        if(!$query){
            $a = array(
                    'title'            => $val->title, 
                    'date_start'       => strtotime($val->date_start), 
                    'date_end'         => strtotime($val->date_end),
                    'link'             => $val->link,
                    'image'            => $val->image,
                    'merchant'         => $val->merchant,
                    'coupon_code'      => !empty($val->coupon_code) ? $val->coupon_code : null ,
                    'coupon_desc'      => !empty($val->coupon_desc) ? $val->coupon_desc : null,
                    'coupon_save'      => !empty($val->coupon_save) ? $val->coupon_save : null,
                    'created_at'       => strtotime($val->created_at),
                    'updated_at'       => strtotime($val->updated_at),
                    'categories'       => !empty($val->categories) ? $val->categories[0]->title : null ,
            );
            $query = db_insert('coupon')->fields($a)->execute();
        }
    }
    
}

// remove node and file
function _cron_mkmh_remove_node(){
    $time = strtotime('-1 day', time());
    $query = db_query("SELECT c.id FROM {coupon} AS c WHERE c.date_end < :date_end", array(':date_end' => $time))->fetchAll();
    if(!empty($query)){
        foreach ($query as $key => $record) {
            db_delete('coupon')->condition('id', $record->id)->execute();
        }
    }
    
}

// _get_merchant_name
function _get_merchant_name($merchant){
    if(empty($merchant)) return;
    $name = null;
    switch ($merchant) {
        case 'lazada':
            $name = 'lazadaapp';
            break;
        default:
            $name = $merchant ;
        break;

    }

    return $name;
}
// save tag
function _save_tag_by_title($name){
    if(empty($name))
        return;
    $vidTags = _get_vid_by_name('tags');
    $tags = explode("-",trim($name));
    $tid = null;
    if(count($tags) > 1){
        foreach ($tags as $kTags => $valTags) {
            $tid[$kTags] = _get_tid_by_name(trim($valTags),'tags');
            if(empty($tid[$kTags])){
                $tid[$kTags] = _create_taxonomy_term(trim($valTags),$vidTags);
            }
        }
    }
    return $tid;
}
// save file from url
function _save_image_form_url($url){
    if(empty($url))
        return;
    $file_info = system_retrieve_file($url, 'public://', TRUE,FILE_EXISTS_REPLACE);
    return $file_info;
    
}

// create taxonomy
function _create_taxonomy_term($name, $vid) {
    $term = new stdClass();
    $term->name = $name;
    $term->vid = $vid;
    taxonomy_term_save($term);
    return $term->tid;
}

// get tid of taxonomy
function _get_tid_by_name($term_name, $vocabulary_name) {
    if ($vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name)) {
        $tree = taxonomy_get_tree($vocabulary->vid);
        foreach ($tree as $term) {
            if ($term->name == $term_name) {
                return $term->tid;
            }
        }
    }
    return FALSE;
}
// get vid of taxonomy
function _get_vid_by_name($name){
    $vocab = taxonomy_vocabulary_machine_name_load($name);
    $vid = $vocab->vid;
    return $vid;
}

// get top product
function _cron_mkmh_get_topproducts(){
    $url = 'https://api.accesstrade.vn/v1/top_products';
    $opts = [
        "http" => [
            "method" => "GET",
            "header" => "Authorization: ".AUTHORIZATION."\r\n" .
                "Content-Type: ".CONTENT_TYPE."\r\n"
        ]
    ];
    $context = stream_context_create($opts);
    // Open the file using the HTTP headers set above
    $file = file_get_contents($url, false, $context);
    $data = json_decode($file);
    return !empty($data) ? $data : null;
}
// get all chuong trinh khuyen mai
function _cron_mkmh_get_offers_informations(){
    $url = 'https://api.accesstrade.vn/v1/offers_informations?status=1';
    $opts = [
        "http" => [
            "method" => "GET",
            "header" => "Authorization: ".AUTHORIZATION."\r\n" .
                "Content-Type: ".CONTENT_TYPE."\r\n"
        ]
    ];
    $context = stream_context_create($opts);
    // Open the file using the HTTP headers set above
    $file = file_get_contents($url, false, $context);
    $data = json_decode($file);
    return !empty($data) ? $data : null;
}

// get all content of product
function _cron_mkmh_get_products(){
    $url = 'https://api.accesstrade.vn/v1/datafeeds?limit=20';
    $opts = [
        "http" => [
            "method" => "GET",
            "header" => "Authorization: ".AUTHORIZATION."\r\n" .
                "Content-Type: ".CONTENT_TYPE."\r\n"
        ]
    ];

    $context = stream_context_create($opts);
    $file = file_get_contents($url, false, $context);
    $data = json_decode($file);
    return !empty($data) ? $data : null;
}

// get all coupon 
function _cron_mkmh_get_coupon(){
    $url = 'http://sv.isvn.space/api/v1/mars/coupon';
    $file = file_get_contents($url, false);
    $data = json_decode($file);
    return !empty($data) ? $data : null;
}

function _getUrlContent($url){
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);
    curl_setopt($ch, CURLOPT_TIMEOUT, 5);
    $data = curl_exec($ch);
    $httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    return ($httpcode>=200 && $httpcode<300) ? $data : false;
}

// parse_url return host
function _parse_url($url){
    if(empty($url)) return;
    $result = parse_url($url);
    return $result['host'];
}

function _dom_html_from_url($url, $domain){
    $module_path = drupal_get_path('module', 'cron_mkmh');
    require_once($module_path ."/html_dom.php");

    // $dom = _getUrlContent('https://fptshop.com.vn/dien-thoai/samsung-galaxy-s8');
    // $html = str_get_html($dom);
    watchdog('my_debug', '<pre>' . var_export($html) . '</pre>');
}