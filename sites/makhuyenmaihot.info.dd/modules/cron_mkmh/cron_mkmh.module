<?php
define('CONTENT_TYPE', 'application/json'); // current CONTENT_TYPE
define('AUTHORIZATION', 'Token iDKOG4khkBOkyMHYS7Y3jFS09Yy4WYX5'); // current CONTENT_TYPE


function cron_mkmh_cron() {
    $data_km =  _cron_mkmh_get_offers_informations();
    $data_topproduct =  _cron_mkmh_get_top_products();
    $data_product =  _cron_mkmh_get_offers_informations();
    
    _cron_mkmh_km_save_node($data_km->data);
    // watchdog('my_debug', '<pre>' . var_export($data_km->data) . '</pre>');
    // watchdog('my_debug', '<pre>' . var_export($data_topproduct->data) . '</pre>');
    // watchdog('my_debug', '<pre>' . var_export($data_product->data) . '</pre>');
}

function _cron_mkmh_km_save_node($data){
    // watchdog('my_debug', '<pre>' . var_export($data) . '</pre>');
    if(empty($data))
        return;

    // get vid
    $vidCategory = _get_vid_by_name('categories_khuyen_mai');
    for ($i=0; $i < count($data); $i++) { 
        $val = $data[$i];
        
        $query = db_query("SELECT node.nid FROM {node} AS node WHERE node.type = :type AND node.status = 1 AND node.title = :title", array(':title' => $val->name, ':type' => 'khuyen_mai'))->rowCount();
        if(!$query){
            
            $query_merchant = db_query("SELECT n.nid FROM {node} AS n INNER JOIN {field_data_field_merchant} AS fm ON fm.entity_id = n.nid WHERE n.type = :type AND fm.field_merchant_value = :merchant", array(":type" => 'thuong_hieu', ':merchant' => $val->merchant) )->fetchObject();
             
            if(empty($query_merchant)){
                continue;
            }
            
            $title = $val->name;

            $node = new stdClass();
            $node->type = 'khuyen_mai';
            $node->uid = 1;
            $node->title = $title;
            $node->created = time();
            $node->changed = $node->created;
            $node->promote = $node->created;
            $node->sticky  = 0;
            $node->language = LANGUAGE_NONE;
            $node->comment = 0;
            // seo
            $node->yoast_seo['und']['focus_keyword'] = $title;
            $node->yoast_seo['und']['seo_status'] = '5';
            //aff_link
            $node->field_aff_link['und'][0]['url'] = $val->aff_link;
            $node->field_teaser['und'][0]['value'] = $val->content;
            $node->body[LANGUAGE_NONE][0]['value'] = $val->content;
            $node->field_id_khuyen_mai['und'][0]['value'] = $val->id;
            $node->field_merchant['und'][0]['value'] = $val->merchant;
            $node->field_url_khuyen_mai['und'][0]['url'] = $val->link;
            $node->field_domain_san_pham['und'][0]['value'] = $val->domain;
            $node->field_thuong_hieu['und'][0]['nid'] = $query_merchant->nid;
            $node->field_start_time['und'][0]['value'] = $val->start_time;
            $node->field_end_time['und'][0]['value'] = $val->end_time;
            
            // check category
            if(!empty($val->categories)){
                $tidCategories = _get_tid_by_name(trim($val->categories[0]->category_name_show),'categories_khuyen_mai');
                if(!empty($tidCategories)){
                    $node->field_category['und'][0]['tid'] = $tidCategories;
                }
                
            }
            
            //save image
            $fid = _save_image_form_url($val->image);
            if(!empty($fid)){
                $node->field_image['und'][0]['fid'] = $fid->fid;
            }
            
            // check coupon
            if(!empty($val->coupons)){
                $node->field_coupon_code['und'][0]['value'] = !empty($val->coupons[0]->coupon_code) ? $val->coupons[0]->coupon_code : null ;
                $node->field_coupon_desc['und'][0]['value'] = !empty($val->coupons[0]->coupon_desc) ? $val->coupons[0]->coupon_desc : null ;
                $node->field_coupon_save['und'][0]['value'] = !empty($val->coupons[0]->coupon_save) ? $val->coupons[0]->coupon_save : null ;
            }
            // field tag
            $tags = _save_tag_by_title($title);
            if(!empty($tags)){
                 
                for ($i=0; $i < count($tags); $i++) { 
                   $node->field_tags['und'][$i]['tid'] = $tags[$i];
                }    
            }
                
            // save node
            node_save($node);
        }
    }
}


// save tag
function _save_tag_by_title($name){
    if(empty($name))
        return;
    $vidTags = _get_vid_by_name('tags');
    $tags = explode("-",trim($name));
    $tid = null;
    if(count($tags) > 1){
        foreach ($tags as $kTags => $valTags) {
            $tid[$kTags] = _get_tid_by_name(trim($valTags),'tags');
            if(empty($tid[$kTags])){
                $tid[$kTags] = _create_taxonomy_term(trim($valTags),$vidTags);
            }
        }
    }
    return $tid;
}
// save file from url
function _save_image_form_url($url){
    if(empty($url))
        return;
    $file_info = system_retrieve_file($url, 'public://', TRUE,FILE_EXISTS_REPLACE);
    return $file_info;
    
}

// create taxonomy
function _create_taxonomy_term($name, $vid) {
    $term = new stdClass();
    $term->name = $name;
    $term->vid = $vid;
    taxonomy_term_save($term);
    return $term->tid;
}

// get tid of taxonomy
function _get_tid_by_name($term_name, $vocabulary_name) {
    if ($vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name)) {
        $tree = taxonomy_get_tree($vocabulary->vid);
        foreach ($tree as $term) {
            if ($term->name == $term_name) {
                return $term->tid;
            }
        }
    }
    return FALSE;
}
// get vid of taxonomy
function _get_vid_by_name($name){
    $vocab = taxonomy_vocabulary_machine_name_load($name);
    $vid = $vocab->vid;
    return $vid;
}
// get all chuong trinh khuyen mai
function _cron_mkmh_get_offers_informations(){
    $url = 'https://api.accesstrade.vn/v1/offers_informations';
    $opts = [
        "http" => [
            "method" => "GET",
            "header" => "Authorization: ".AUTHORIZATION."\r\n" .
                "Content-Type: ".CONTENT_TYPE."\r\n"
        ]
    ];
    $context = stream_context_create($opts);
    // Open the file using the HTTP headers set above
    $file = file_get_contents($url, false, $context);
    $data = json_decode($file);
    return !empty($data) ? $data : null;
    // watchdog('my_debug', '<pre>' . var_export($data) . '</pre>');
    
}

// get all content of top product
function _cron_mkmh_get_top_products(){
    $url = 'https://api.accesstrade.vn/v1/top_products';
    $opts = [
        "http" => [
            "method" => "GET",
            "header" => "Authorization: ".AUTHORIZATION."\r\n" .
                "Content-Type: ".CONTENT_TYPE."\r\n"
        ]
    ];
    $context = stream_context_create($opts);
    $file = file_get_contents($url, false, $context);
    $data = json_decode($file);
    return !empty($data) ? $data : null;
}

// get all content of product
function _cron_mkmh_get_products(){
    $url = 'https://api.accesstrade.vn/v1/datafeeds?limit=50';
    $opts = [
        "http" => [
            "method" => "GET",
            "header" => "Authorization: ".AUTHORIZATION."\r\n" .
                "Content-Type: ".CONTENT_TYPE."\r\n"
        ]
    ];

    $context = stream_context_create($opts);
    $file = file_get_contents($url, false, $context);
    $data = json_decode($file);
    return !empty($data) ? $data : null;
}